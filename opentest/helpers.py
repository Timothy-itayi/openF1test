from urllib.request import urlopen, Request
from urllib.error import HTTPError
import json
import requests


def get_driver_standing(season_id):
    try:
        # Make the request to the API endpoint
      
        url = f'https://hyprace-api.p.rapidapi.com/v1/seasons/{season_id}/drivers'

        headers = {
            "X-RapidAPI-Key": "28cc18cd86msh2d23644af92c4fcp12a35cjsn875e2a90b205",
            "X-RapidAPI-Host": "hyprace-api.p.rapidapi.com"
        }
        response = requests.get(url, headers=headers)
        # Ensure that the request was successful
        response.raise_for_status()
        # Read and decode the response data
        data = response.json()
        return data
    except requests.HTTPError as e:
        # Handle HTTPError exceptions
        print(f"HTTP Error: {e.response.status_code} - {e.response.reason}")
        return None 

def get_team_standing(season_id):
    try:
        # Make the request to the api endpoint
        url = f'https://hyprace-api.p.rapidapi.com/v1/seasons/{season_id}/constructors'
        headers = {
            "X-RapidAPI-Key": "28cc18cd86msh2d23644af92c4fcp12a35cjsn875e2a90b205",
            "X-RapidAPI-Host": "hyprace-api.p.rapidapi.com"
        }
        response = requests.get(url, headers=headers)
        # Ensure that the request was successful
        response.raise_for_status()
        # Read and decode the response data
        data = response.json()
        return data
    except requests.HTTPError as e:
        # Handle HTTPError exceptions
        print(f"HTTP Error: {e.response.status_code} - {e.response.reason}")
        return None  



        # def get_f1_data(driver_number):
#     try:
#         # Make the request to the API endpoint
#         response = urlopen(f'https://api.openf1.org/v1/drivers?driver_number={driver_number}&session_key=latest')
#         # Read and decode the response data
#         data = json.loads(response.read().decode('utf-8'))
        
#         return data
#     except HTTPError as e:
#         # Handle HTTPError exceptions
#         print(f"HTTP Error: {e.code} - {e.reason}")
#         return None  # Return None or raise a custom exception, depending on your requirements
